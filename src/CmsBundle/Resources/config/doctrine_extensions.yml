services:
    # KernelRequest listener
    Opifer\CmsBundle\EventSubscriber\DoctrineExtensionSubscriber:
        arguments: ['@Gedmo\Translatable\TranslatableListener']
        tags:
            # translatable sets locale after router processing
            - { name: kernel.event_subscriber, priority: -10 }

    # Doctrine Extension listeners to handle behaviors
    gedmo.listener.tree:
        class: Gedmo\Tree\TreeListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]

    Gedmo\Translatable\TranslatableListener:
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]
            - [ setDefaultLocale, [ '%opifer_cms.default_locale%' ] ]
            - [ setTranslationFallback, [ true ] ]
        public: true

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default, priority: 100 } # should handle events before revisionslistener does
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]
            - [ addManagedFilter, ['softdeleteable']]

    gedmo.listener.sortable:
        class: Gedmo\Sortable\SortableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]

    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default, priority: 101 } # should handle events before revisionslistener does
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]

    opifer.revisions.schema_listener:
        class: Opifer\Revisions\EventListener\SchemaListener
        arguments: ['@service_container', '@opifer.revisions.annotation_reader']
        tags:
            - { name: 'doctrine.event_subscriber' }

#    opifer.revisions.revision_listener:
#        class: Opifer\Revisions\EventListener\RevisionListener
#        arguments: ['@service_container', '@opifer.revisions.annotation_reader']
#        tags:
#            - { name: 'doctrine.event_subscriber', priority: 1000 }
